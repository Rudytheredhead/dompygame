import pygame
import sys
import random

# Inicjalizacja Pygame
pygame.init()

# Parametry ekranu
WIDTH, HEIGHT = 1900, 900
SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("cos")

# Kolory
WHITE = (255, 255, 255)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
wynik = 0
# Klasa reprezentująca kwadrat
class Square:
    def __init__(self, x, y, sx = 100, sy = 200, idi =0):
        self.rect = pygame.Rect(x, y, sx,sy)
        self.color = RED
        self.idi = idi

    def draw(self, surface):
        pygame.draw.rect(surface, self.color, self.rect)

    def handle_click(self, pos):
        if self.rect.collidepoint(pos):
            # Coś się dzieje -> zmiana koloru
            wynik =square.idi
            return square.idi
        else :
            return 0

# Funkcja do tworzenia kwadratów
def create_squares(count):
    squares = []
    pol = []
    odl = 10
    for i in range(count):
        x = 850 + ((-1)**i)*i//2*(odl + 100) 
        
       
        pol.append(x)
        pol.sort()
    for i in range(count):

        squares.append(Square(pol[i], 650, idi=i+1))
    return squares

pole = 500
odl = 0

clock = pygame.time.Clock()

    # Pobierz ilość kwadratów od użytkownika
count = int(input("Podaj ilosc kwadratow: "))
   
squares = create_squares(count)
ktora = None
running = True
while running:
        SCREEN.fill(WHITE)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            # Obsługa kliknięcia myszką
            if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_pos = event.pos
                for square in squares:
                    
                    
                    ktora = square.handle_click(mouse_pos)
                    if ktora == 0:
                        pass
                    else:
                        print (ktora)

        # Rysowanie kwadratów
        for square in squares:
            square.draw(SCREEN)

        pygame.display.flip()
        clock.tick(60)

  

